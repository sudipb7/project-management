generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MemberRole {
  ADMIN
  MEMBER
}

enum InviteStatus {
  PENDING
  ACCEPTED
  REJECTED
}

model User {
  id    String  @id @default(cuid())
  name  String
  image String?
  email String  @unique

  members Member[]
  invites Invite[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Member {
  id          String     @id @default(cuid())
  userId      String     @map("user_id")
  workspaceId String     @map("workspace_id")
  role        MemberRole @default(MEMBER)

  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  workspace Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([userId, workspaceId])
  @@map("members")
}

model Workspace {
  id          String  @id @default(cuid())
  name        String
  image       String?
  description String?

  members Member[]
  invites Invite[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("workspaces")
}

model Invite {
  id          String       @id @default(cuid())
  code        String       @unique
  userId      String       @map("user_id")
  workspaceId String       @map("workspace_id")
  expiresAt   DateTime     @map("expires_at")
  status      InviteStatus @default(PENDING)

  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  workspace Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([workspaceId])
  @@index([userId])
  @@map("invites")
}
